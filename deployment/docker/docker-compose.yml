services:
  # MrDoc 主应用
  mrdocs-safe-app:
    build:
      context: ../..
      dockerfile: deployment/docker/Dockerfile.mrdoc
    container_name: mrdocs-safe-app
    restart: unless-stopped
    # ports:
    #   - "8081:8000"  # 已移除，通过 Nginx 8081 访问
    volumes:
      - ../../media:/app/media
      - ../../logs:/app/logs
      - ../../static:/app/static
      - ../../config:/app/config
      - sqlite_data:/app/db
    environment:
      - DB_ENGINE=sqlite
      - DB_NAME=/app/config/db.sqlite3
      - REDIS_HOST=mrdocs-safe-redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=redispassword123
      - DJANGO_SETTINGS_MODULE=MrDoc.settings
      - DJANGO_SECRET_KEY=django_safe_secret_6WZlZsnpSV78ie9OZDmXPFodGnGWc2FNjJBuOIQqhPc
      - DJANGO_DEBUG=False
      - DJANGO_ALLOWED_HOSTS=*
      - DJANGO_SUPERUSER_USERNAME=admin
      - DJANGO_SUPERUSER_EMAIL=admin@example.com
      - DJANGO_SUPERUSER_PASSWORD=admin123456
      - REDIS_DB=4
      - TZ=Asia/Shanghai
    networks:
      - mrdocs-safe-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s
    depends_on:
      - mrdocs-safe-redis

  # Redis 缓存
  mrdocs-safe-redis:
    image: redis:7-alpine
    container_name: mrdocs-safe-redis
    restart: unless-stopped
    volumes:
      - mrdocs-safe_redis_data:/data
    ports:
      - "6380:6379"
    networks:
      - mrdocs-safe-network
    command: redis-server --requirepass redispassword123 --databases 16
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "redispassword123", "ping"]
      interval: 30s
      timeout: 3s
      retries: 5

  # Nginx 反向代理
  mrdocs-safe-nginx:
    image: nginx:alpine
    container_name: mrdocs-safe-nginx
    restart: unless-stopped
    ports:
      - "8081:80"
      - "8443:443"
    volumes:
      - ../nginx/nginx.conf:/etc/nginx/nginx.conf
      - ../nginx/mrdoc.conf:/etc/nginx/conf.d/default.conf
      - ../../static:/var/www/static
      - ../../media:/var/www/media
    networks:
      - mrdocs-safe-network
    depends_on:
      - mrdocs-safe-app

# 数据卷定义
volumes:
  sqlite_data:
  mrdocs-safe_redis_data:

# 网络定义
networks:
  mrdocs-safe-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.31.0.0/16
          gateway: 172.31.0.1
